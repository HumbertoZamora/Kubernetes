********************************* INSTALACION *********************************
-- Repositorio Kubernetes
 
zypper addrepo --type yum --gpgcheck-strict --refresh https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64 google-k8s

cat <<EOF > /etc/zypp/repos.d/google-k8s.repo
[google-k8s]
name=google-k8s
enabled=1
autorefresh=1
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
type=rpm-md
gpgcheck=1
repo_gpgcheck=1
pkg_gpgcheck=1
EOF


-- Llaves

rpm --import https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
rpm --import https://packages.cloud.google.com/yum/doc/yum-key.gpg
rpm -q gpg-pubkey --qf '%{name}-%{version}-%{release} --> %{summary}\n'

zypper refresh google-k8s
zypper packages --repo google-k8s


 zypper install kubeadm kubectl kubelet cri-tools conntrack-tools conntrackd docker

 cat > /etc/docker/daemon.json <<EOF
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
  "max-size": "100m"
  },
  "storage-driver": "btrfs" ## Solo aplica para SUSE pues ocupa un sistema de archivos BtrFS
}

mkdir -p /etc/systemd/system/docker.service.d

-- Parametros del kernel
cat <<EOF >> /etc/sysctl.conf
net.ipv4.ip_forward = 1
net.ipv4.conf.all.forwarding = 1
net.bridge.bridge-nf-call-iptables = 1

net.ipv6.conf.all.forwarding = 1
net.ipv6.conf.default.forwarding = 1
EOF

sysctl -p


systemctl enable docker.service
systemctl enable kubelet.service
systemctl start docker.service
systemctl start kubelet.service ## INICIARLO o NO depende si sera master o node.

*******************************************************************************


******************************** CONFIGURACION ********************************

-- CNI Calico
https://docs.oracle.com/en-us/iaas/Content/ContEng/Tasks/contengsettingupcalico.htm


wget https://docs.projectcalico.org/v3.10/manifests/calico-policy-only.yaml -o calico.yaml

export POD_CIDR="10.244.0.0/16"

sed -i -e "s?192.168.0.0/16?$POD_CIDR?g" calico.yaml ## Esta sustitucion se puede hacer igual a mano.

kubectl apply -f calico.yaml

kubeadm init --pod-network-cidr=10.244.0.0/16 ## Este init solo se hace en el master.

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
chown $(id -u):$(id -g) $HOME/.kube/config

*******************************************************************************




NOTAS:

-- Purgar master o node
kubeadm reset
docker system prune -a
rm -rf /var/lib/kubelet
rm -rf /etc/kubernetes
rm -rf /var/lib/cni
rm -rf /etc/cni/

-- KubeView
git clone https://github.com/benc-uk/kubeview
cd kubeview/charts/
helm install kubeview kubeview -n kube-view


-- Buscar imagenes docker
 docker ps -a |  grep "pattern‚Äù
 
 docker ps -a | grep "pattern" | awk '{print $3}' | xargs docker rmi
 

# Deploy Flannel network addon
$ kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

# remove taint from the master node. 
# It allows master node to run application pods. 
# At least one worker node is required if this step is skipped.
$ kubectl taint nodes --all node-role.kubernetes.io/master-